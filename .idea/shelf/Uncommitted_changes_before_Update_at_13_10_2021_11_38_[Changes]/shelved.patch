Index: src/no/hvl/dat100/prosjekt/kontroll/Bord.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package no.hvl.dat100.prosjekt.kontroll;\r\n\r\nimport no.hvl.dat100.prosjekt.modell.KortSamling;\r\nimport no.hvl.dat100.prosjekt.modell.KortUtils;\r\nimport no.hvl.dat100.prosjekt.TODO;\r\nimport no.hvl.dat100.prosjekt.modell.Kort;\r\n\r\n/**\r\n * Klasse som implementerer bordet som spilles på. \r\n * \r\n * Klassen har objektvariablene bunkeTil og bunkeFra som skal brukes til å representere \r\n * kortene som er i de to bunker på border. \r\n */\r\npublic class Bord {\r\n\r\n\tprivate KortSamling bunkeFra;\r\n\tprivate KortSamling bunkeTil;\r\n\r\n\t/**\r\n\t * Metoden oppretter to bunker, til- og fra-bunken\r\n\t * Alle kortene legges til fra-bunken. \r\n\t */\r\n\tpublic Bord() {\r\n\t\tthis.bunkeFra = new KortSamling();\r\n\t\tthis.bunkeTil = new KortSamling();\r\n\t\tbunkeFra.leggTilAlle();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Gir peker/referanse til til-bunken.\r\n\t * \r\n\t * @return referanse/peker til til-bunken.\r\n\t */\r\n\tpublic KortSamling getBunkeTil() {\r\n\t\t\r\n\t\treturn bunkeTil;\r\n\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Gir peker/referanse til fra-bunken.\r\n\t * \r\n\t * @return referanse/peker til fra-bunken.\r\n\t */\r\n\tpublic KortSamling getBunkeFra() {\r\n\t\t\r\n\t\treturn bunkeFra;\r\n\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * Sjekker om til-bunken er tom.\r\n\t * \r\n\t * @return true om til-bunken er tom, false ellers.\r\n\t */\r\n\tpublic boolean bunketilTom() {\r\n\t\t\r\n\t\tif (bunkeTil.erTom()){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Sjekker om fra-bunken er tom.\r\n\t * \r\n\t * @return true om fra-bunken er tom, false ellers.\r\n\t */\r\n\tpublic boolean bunkefraTom() {\r\n\r\n\t\tif (bunkeFra.erTom()){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * Gir antall kort i fra-bunken.\r\n\t * \r\n\t * @return antall kort i fra-bunken.\r\n\t */\r\n\tpublic int antallBunkeFra() {\r\n\t\t\r\n\t\t// TODO - START\r\n\t\t\r\n\t\tthrow new UnsupportedOperationException(TODO.method());\r\n\r\n\t\t// TODO - END\r\n\t}\r\n\r\n\t/**\r\n\t * Gir antall kort i til-bunken.\r\n\t * \r\n\t * @return antall kort i til-bunken.\r\n\t */\r\n\tpublic int antallBunkeTil() {\r\n\t\t\r\n\t\t// TODO - START\r\n\t\t\r\n\t\tthrow new UnsupportedOperationException(TODO.method());\r\n\r\n\t\t// TODO - END\r\n\t}\r\n\t\r\n\t/**\r\n\t * Tar øverste kortet fra fra-bunken og legger dettte til til-bunken (med\r\n\t * billedsiden opp, men det trenger ikke gruppen tenke på).\r\n\t */\r\n\tpublic void vendOversteFraBunke() {\r\n\t\t\r\n\t\t// TODO - START\r\n\t\t\r\n\t\tthrow new UnsupportedOperationException(TODO.method());\r\n\t\t// TODO - END\r\n\t\t\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * Tar øverste kortet fra fra-bunken.\r\n\t * \r\n\t * @return peker/referanse til det kort som blev tatt fra fra-bunken\r\n\t */\r\n\t\r\n\tpublic Kort taOversteFraBunke() {\r\n\t\t\r\n\t\t// TODO - START\r\n\t\t\r\n\t\tthrow new UnsupportedOperationException(TODO.method());\r\n\r\n\t\t// TODO - END\r\n\t}\r\n\t\r\n\t/**\r\n\t * Metode som leser øverste kortet i til-bunken. Kortet vil fremdeles være\r\n\t * øverst i til-bunken etter at metoden er utført.\r\n\t * \r\n\t * @return peker/referanse til øverste kortet i til-bunken.\r\n\t */\r\n\tpublic Kort seOversteBunkeTil() {\r\n\t\t\r\n\t\t// TODO - START\r\n\t\t\r\n\t\tthrow new UnsupportedOperationException(TODO.method());\r\n\r\n\t\t// TODO - END\r\n\t}\r\n\t\r\n\t/**\r\n\t * Når fra-bunken blir tom, tar man vare på kortet pÂ toppen av til-bunken.\r\n\t * Deretter legges alle den andre kortene i til-bunken over i fra-bunken.\r\n\t * Denne stokkes og kortet som man har tatt vare pÂ legges tilbake i\r\n\t * til-bunken. Det vil nå være det eneste kortet i til-bunken.\r\n\t */\r\n\tpublic void snuTilBunken() {\r\n\r\n\t\t// TODO - START\r\n\t\t\r\n\t\tthrow new UnsupportedOperationException(TODO.method());\r\n\t\t// TODO - END\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * Metode som legger et kort i til-bunken. \r\n\t * \r\n\t * @param k\r\n\t * \t\t\tkort som skal legges ned. \r\n\t * \t\r\n\t */\r\n\tpublic void leggNedBunkeTil(Kort k) {\r\n\t\t\r\n\t\t// TODO - START\r\n\t\t\r\n\t\tthrow new UnsupportedOperationException(TODO.method());\r\n\t\t// TODO - END\r\n\t\t\t\t\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/no/hvl/dat100/prosjekt/kontroll/Bord.java b/src/no/hvl/dat100/prosjekt/kontroll/Bord.java
--- a/src/no/hvl/dat100/prosjekt/kontroll/Bord.java	(revision 94391ec1a704724a0f4d289a82d6b1678a32ebd3)
+++ b/src/no/hvl/dat100/prosjekt/kontroll/Bord.java	(date 1634117908609)
@@ -31,7 +31,7 @@
 	 * 
 	 * @return referanse/peker til til-bunken.
 	 */
-	public KortSamling getBunkeTil() {
+	public KortSamling getBunkeTil() { //FERDIG
 		
 		return bunkeTil;
 		
@@ -42,7 +42,7 @@
 	 * 
 	 * @return referanse/peker til fra-bunken.
 	 */
-	public KortSamling getBunkeFra() {
+	public KortSamling getBunkeFra() { //FERDIG
 		
 		return bunkeFra;
 		
@@ -54,11 +54,8 @@
 	 * @return true om til-bunken er tom, false ellers.
 	 */
 	public boolean bunketilTom() {
-		
-		if (bunkeTil.erTom()){
-			return true;
-		}
-		return false;
+
+		return bunkeTil.erTom();
 	}
 
 	/**
@@ -68,11 +65,8 @@
 	 */
 	public boolean bunkefraTom() {
 
-		if (bunkeFra.erTom()){
-			return true;
-		}
-		return false;
-		
+		return bunkeFra.erTom();
+
 	}
 	
 	/**
@@ -169,10 +163,7 @@
 	 */
 	public void leggNedBunkeTil(Kort k) {
 		
-		// TODO - START
-		
-		throw new UnsupportedOperationException(TODO.method());
-		// TODO - END
+		getBunkeTil().leggTil(k);
 				
 	}
 }
